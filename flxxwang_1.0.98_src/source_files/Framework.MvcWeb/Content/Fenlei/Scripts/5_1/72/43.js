if (typeof (sysver_43) != 'undefined' && sysver_43 > 1101241802) { document.write('<script type="text/javascript" src="http://pic2.58.com/js/5_1/72/43.js?temp=' + sysver_43 + '"><\/script>') } else { function getel(id) { return window.document.getElementById(id) } function GetAttr(obj, name) { if (obj.getAttribute(name)) { return obj.getAttribute(name) } return null } function FilterHtml(val) { if (val && val != '') { return val.replace(/(<cite.*?>.*?<.cite>)/ig, '').replace(/(<.*?>)/ig, '') } return '' } function stateChangeIE(_frame) { if (_frame.readyState == "complete") { isFrameComplete = true } } function stateChangeFirefox(_frame) { isFrameComplete = true } function QuanToBan(val) { if (!val || val == '') return ''; var result = ""; for (var i = 0; i < val.length; i++) { if (val.charCodeAt(i) == 12288) { result += String.fromCharCode(val.charCodeAt(i) - 12256); continue } if (val.charCodeAt(i) > 65280 && val.charCodeAt(i) < 65375) { result += String.fromCharCode(val.charCodeAt(i) - 65248) } else { result += String.fromCharCode(val.charCodeAt(i)) } } return result } var isFrameComplete = false; isFrameComplete = true; var is_cur_window_load_complete = false; function initDefaultValue(objid, defaultvalue) { var obj = getel(objid); obj.onfocus = function () { if (this.value == defaultvalue) { this.value = "" } this.className = "keyword2" }; obj.onblur = function () { if (this.value == "") { this.value = defaultvalue; this.className = "keyword" } if (win) { win.closeToolTipWindow() } }; obj.focus(); obj.blur() } function GetCookieValue(name) { var arr = document.cookie.match(new RegExp(name + "=([^&;]+)")); return arr == null ? "" : decodeURI(arr[1]) } function writeCookie(name, value, domain, day, path) { var cookie = name + "=" + escape(value) + ";"; if (domain && domain != '') { cookie = cookie + "domain=" + domain + ";" } if (day && day > 0) { var exp = new Date(); exp.setTime(exp.getTime() + (86400 * 1000 * day)); cookie = cookie + "expires=" + exp.toGMTString() + ";" } if (path && path != '') { cookie = cookie + "path=" + path + ";" } document.cookie = cookie } function writeUserName(isNew) { if (!(document.cookie != null && document.cookie != '' && document.cookie != 'undefined')) { var exp = new Date(); exp.setTime(exp.getTime() + 30 * 24 * 60 * 60 * 1000); document.cookie = "supportcookie=true;domain=58.com;expires=" + exp.toGMTString(); if (!(document.cookie != null && document.cookie != '' && document.cookie != 'undefined')) { document.write('<script type="text/javascript" src="http://user.58.com/userloginstate.ashx"><\/script>'); return true } } var host = window.location.hostname; var hosthome = host.substr(0, host.indexOf(".")); var outurl = escape(window.location.href); var str = ''; str = '<a href="http://passport.58.com/login/?path=' + outurl + '" target="_self">登录</a> <a href="http://passport.58.com/reg/?city=' + hosthome + '" target="_self">注册</a>'; try { if (GetCookieValue("UserName") != "") { var msgcount = parseInt(GetCookieValue("MsgUnReadTotal")) + parseInt(GetCookieValue("SystemUnReadTotal")) + parseInt(GetCookieValue("RequireFriendUnReadTotal")) + parseInt(GetCookieValue("CommentUnReadTotal")); str = GetCookieValue("UserName"); if (msgcount > 0) { str += '(<span class="red"><a style="color:#F00;margin: 0px;" href="http://my.58.com/liuyanjieshou/" title="你有' + msgcount + '条未读短信息">' + msgcount + '</a></span>)' } str += ' <a href="http://my.58.com/" target="_self">用户中心</a> <a href="http://passport.58.com/logout/?path=' + outurl + '" target="_self">退出</a>' } document.write(str); return true } catch (e) { document.write(str); return true } } function getElementPositionX(elem) { var offsetTrail = elem, offsetLeft = 0; while (offsetTrail) { offsetLeft += offsetTrail.offsetLeft; offsetTrail = offsetTrail.offsetParent } if (navigator.userAgent.indexOf("Mac") != -1 && typeof (document.body.leftMargin) != "undefined") offsetLeft += document.body.leftMargin; return offsetLeft } function getElementPositionY(elem) { var offsetTrail = elem, offsetTop = 0; while (offsetTrail) { offsetTop += offsetTrail.offsetTop; offsetTrail = offsetTrail.offsetParent } if (navigator.userAgent.indexOf("Mac") != -1 && typeof (document.body.leftMargin) != "undefined") offsetTop += document.body.topMargin; return offsetTop + elem.clientHeight + 4 } function SetCurWindowLoadComplete() { is_cur_window_load_complete = true; initDefaultValue("keyword", "请输入类别名称或关键字") } function GetToolTipWindow(tooltipWindowID, inputbox, tooptipType, cityid, selid, showhot) { var arr = tooltipWindowID.split('|'); if (arr.length > 1 && arr[1] == '1') { this.tooltipWindowID = arr[0]; this.showInstruction = true } else { this.tooltipWindowID = tooltipWindowID; this.showInstruction = false } this.inputbox = inputbox; this.tooptipType = tooptipType; this.cityid = cityid; if (selid) this.selid = selid; else this.selid = ''; this.notHideTips = false; this.buttonID = ''; if (showhot) this.showhot = true; else this.showhot = false; this.trainTip = ''; if (tooptipType == '8') this.trainTip = 'T1|D3|Z4|D98|C2001|Y563'; if (tooptipType == '7') this.trainTip = '北京|上海|深圳|广州|武汉|西安' } function GetToolTipInfoData(tooltipWindowID, inputbox, tooltipType, cityid, selid, showInstruction, buttonID, showhot) { GetToolTipInfoDataDIV(tooltipWindowID, inputbox, tooltipType, cityid, QuanToBan(getel(inputbox.split('|')[0]).value), selid, showInstruction, buttonID, showhot) } function SetMouseOver(obj, toolWindowID) { var wins = getel(toolWindowID); if (!wins) return; var lis = wins.getElementsByTagName('li'); var i = 0; if (lis && lis.length > 0) for (; i < lis.length; i++) lis[i].className = 'unselected'; obj.className = 'selected' } function SetToolTipData(contentData, tooltipWindowID, inputbox, tooltipType, selid, showInstruction, buttonID, showhot) { var arr1 = selid.split('|'); if (arr1.length > 1 && arr1[0] == '0') if (getel(arr1[1])) getel(arr1[1]).value = FilterHtml(contentData); if (contentData != '') { var arr = contentData.split('|'); var i = 0; if (getel(tooltipWindowID)) getel(tooltipWindowID).style.display = 'block'; else return; var obj = getel(tooltipWindowID).getElementsByTagName('ul'); var result = ""; var clsName = ''; var re; var hot = ''; for (i = 0; i < arr.length; i++) { if (!arr[i]) continue; re = new RegExp("^(.+?)##", "ig"); clsName = 'unselected'; hot = ''; if (re.test(arr[i])) hot = RegExp.$1; arr[i] = arr[i].replace(re, ''); if (showhot && hot != '') result += "<li class='" + clsName + "' onmouseover=\"SetMouseOver(this,'" + tooltipWindowID + "')\" onmouseout=\"this.className='unselected'\" onmousedown=\"SetInputValue(this,'" + inputbox + "','" + tooltipWindowID + "','" + selid + "','" + buttonID + "');return false\"><span class='tool_r'>约&nbsp;" + hot + "&nbsp;条</span>"; else result += "<li class='" + clsName + "' onmouseover=\"SetMouseOver(this,'" + tooltipWindowID + "')\" onmouseout=\"this.className='unselected'\" onmousedown=\"SetInputValue(this,'" + inputbox + "','" + tooltipWindowID + "','" + selid + "','" + buttonID + "');return false\">"; if (showInstruction) { var tempArr = arr[i].split('@@'); if (tempArr.length > 1) result = result + "<a href='javascript:void(0)'>" + tempArr[0] + "<cite>" + tempArr[1] + "</cite></a>"; else result = result + "<a href='javascript:void(0)'>" + arr[i] + "</a>" } else result = result + "<a href='javascript:void(0)'>" + arr[i] + "</a>"; result += "</li>" } obj[0].innerHTML = result; if (selid && selid != '') HideSelectedItem(selid) } else { if (getel(tooltipWindowID)) { getel(tooltipWindowID).style.display = 'none'; var obj = getel(tooltipWindowID).getElementsByTagName('ul'); obj[0].innerHTML = ""; if (selid && selid != '') ShowSelectedItem(selid) } else { if (selid && selid != '') ShowSelectedItem(selid); return } } } function SetInputValue1(obj, inputbox, tooltipWindowID, selid, buttonID) { var val = ''; if (obj) { obj = obj.getElementsByTagName('a'); if (obj.length > 0) obj = obj[0] } val = obj.innerHTML; if (val && val != '') val = FilterHtml(val); var arr = inputbox.split('|'); if (arr.length > 1) { if (getel(arr[0])) getel(arr[0]).value = val; if (getel(arr[1])) { if (obj.innerHTML.match(/<cite.*?>(.*?)<.cite>/ig) && obj.innerHTML.match(/<cite.*?>(.*?)<.cite>/ig).length > 0) getel(arr[1]).value = obj.innerHTML.match(/<cite.*?>(.*?)<.cite>/ig)[0].replace(/(<.*?>)/ig, ''); else getel(arr[1]).value = '' } } else if (getel(inputbox)) if (getel(inputbox)) getel(inputbox).value = val } function SetInputValue(obj, inputbox, tooltipWindowID, selid, buttonID) { SetInputValue1(obj, inputbox, tooltipWindowID, selid, buttonID); if (getel(tooltipWindowID)) getel(tooltipWindowID).style.display = 'none'; if (buttonID != '' && getel(buttonID)) getel(buttonID).click(); if (selid && selid != '') ShowSelectedItem(selid) } GetToolTipWindow.prototype = { openToolTipWindow: function () { var input = getel(this.inputbox.split('|')[0]); var m = this.tooltipWindowID + "mask"; var tooltipid = this.tooltipWindowID; var selid = this.selid; this.closeToolTipWindow(); var newDiv = document.createElement("div"); newDiv.id = this.tooltipWindowID; newDiv.style.position = "absolute"; newDiv.style.zIndex = "9999"; newDiv.style.display = 'none'; newDiv.style.top = getElementPositionY(input) + "px"; newDiv.style.left = getElementPositionX(input) + "px"; newDiv.className = 'tooltip'; newDiv.innerHTML = "<ul></ul>"; document.body.appendChild(newDiv) }, GetContentData: function () { if (!isFrameComplete || !is_cur_window_load_complete) return; if (GetCookieValue('closetooltip') == '1' && !this.notHideTips) return; var evt = null; if (document.all) evt = window.event; else evt = arguments.callee.caller.arguments[0]; if (evt != null) { switch (evt.keyCode) { case 13: var temp = getel(this.tooltipWindowID); if (temp && temp.style.display != 'none') { var list = temp.getElementsByTagName('li'); var i = 0; if (list.length > 0) for (i = 0; i < list.length; i++) if (list[i].className && list[i].className == 'selected') SetInputValue1(list[i], this.inputbox, '', '', '') } if (this.selid && this.selid != '') ShowSelectedItem(this.selid); this.closeToolTipWindow(); if (this.buttonID != '' && getel(this.buttonID)) getel(this.buttonID).click(); return; case 38: var temp = getel(this.tooltipWindowID); if (temp && temp.style.display != 'none') { var list = temp.getElementsByTagName('li'); var i = 0; var hasselected = false; if (list.length > 0) { for (i = 0; i < list.length; i++) { if (list[i].className && list[i].className == 'selected') { hasselected = true; list[i].className = 'unselected'; if (i > 0) { list[i - 1].className = 'selected'; if (getel(this.inputbox.split('|')[0])) { if (list[i - 1]) { SetInputValue1(list[i - 1], this.inputbox, '', '', '') } getel(this.inputbox.split('|')[0]).focus() } return } else { list[list.length - 1].className = 'selected'; if (getel(this.inputbox.split('|')[0])) { if (list[list.length - 1]) SetInputValue1(list[list.length - 1], this.inputbox, '', '', ''); getel(this.inputbox.split('|')[0]).focus() } return } } } if (!hasselected) { list[list.length - 1].className = 'selected'; if (getel(this.inputbox.split('|')[0])) { if (getel(this.inputbox.split('|')[0])) { if (list[list.length - 1]) SetInputValue1(list[list.length - 1], this.inputbox, '', '', ''); getel(this.inputbox.split('|')[0]).focus() } getel(this.inputbox.split('|')[0]).focus() } return } } } return; case 40: var temp = getel(this.tooltipWindowID); if (temp && temp.style.display != 'none') { var list = temp.getElementsByTagName('li'); var i = 0; var hasselected = false; if (list.length > 0) { for (i = 0; i < list.length; i++) { if (list[i].className && list[i].className == 'selected') { hasselected = true; list[i].className = 'unselected'; if (i < list.length - 1) { list[i + 1].className = 'selected'; if (getel(this.inputbox.split('|')[0])) { if (list[i + 1]) SetInputValue1(list[i + 1], this.inputbox, '', '', ''); getel(this.inputbox.split('|')[0]).focus() } return } else { list[0].className = 'selected'; if (getel(this.inputbox.split('|')[0])) { if (list[0]) SetInputValue1(list[0], this.inputbox, '', '', ''); getel(this.inputbox.split('|')[0]).focus() } return } } } if (!hasselected) { list[0].className = 'selected'; if (getel(this.inputbox.split('|')[0])) { if (list[0]) SetInputValue1(list[0], this.inputbox, '', '', ''); getel(this.inputbox.split('|')[0]).focus() } return } } } return } } if (getel(this.inputbox.split('|')[0]).value == '') { if (this.tooptipType == '7' || this.tooptipType == '8') { if (!getel(this.tooltipWindowID)) this.openToolTipWindow(); SetToolTipData(this.trainTip, this.tooltipWindowID, this.inputbox, this.tooptipType, this.selid, this.showInstruction, this.buttonID, this.showhot); return } if (this.selid && this.selid != '') ShowSelectedItem(this.selid); this.closeToolTipWindow(); return } if (!getel(this.tooltipWindowID)) this.openToolTipWindow(); GetToolTipInfoData(this.tooltipWindowID, this.inputbox, this.tooptipType, this.cityid, this.selid, this.showInstruction, this.buttonID, this.showhot) }, closeToolTipWindow: function () { if (this.selid && this.selid != '') ShowSelectedItem(this.selid); var m = this.tooltipWindowID + "mask"; if (getel(this.tooltipWindowID)) document.body.removeChild(getel(this.tooltipWindowID)); if (getel(m)) document.body.removeChild(getel(m)) }, setNothideTips: function () { this.notHideTips = true }, setSearchButton: function (buttonID) { this.buttonID = buttonID }, getSearchURL: function () { var url = window.location.href; if (getel(this.inputbox.split('|')[0]).value != '') { if (url.match(/key=[^&]+/ig)) { url = url.replace(/key=[^&]+/ig, 'key=' + encodeURI(getel(this.inputbox.split('|')[0]).value)) } else { if (url.indexOf('?') > 0) { url = url + '&key=' + encodeURI(getel(this.inputbox.split('|')[0]).value) } else { url = url + '?key=' + encodeURI(getel(this.inputbox.split('|')[0]).value) } } } return url } }; var UrlUtility = { DecordKey: function (v) { if (v && v != '') { return unescape(decodeURI(v)) } return v }, EncordKey: function (v) { if (v && v != '') { return encodeURI(escape(v)) } return v }, AddPara: function (url, name, value) { if (url.toString().indexOf('?') >= 0) { var re = new RegExp("([&?])" + name + "=([^&?]*)", "ig"); return ((re.test(url)) ? (url.replace(re, RegExp.$1 + name + '=' + value)) : url + '&' + name + '=' + value) } else { return url + '?' + name + '=' + value } }, AddKeyPara: function (url, value, key) { if (!(key && key != '')) { key = 'key' } if (value && value != '') { value = UrlUtility.EncordKey(value); return UrlUtility.AddPara(url, key, value) } else { return UrlUtility.DelPara(url, key) } }, GetKeyPara: function (url, key) { return UrlUtility.DecordKey(UrlUtility.GetParaValue(url, key)) }, DelPara: function (url, name) { var re = new RegExp("([&?])" + name + "=([^&?]*)(&|$)", "ig"); if (re.test(url)) { url = url.replace(re, RegExp.$1); if (url.indexOf('?') == url.length - 1 || url.charAt(url.length - 1) == '&') { url = url.substring(0, url.length - 1) } } return url }, GetParaValue: function (url, name) { var re = new RegExp("[&?]" + name + "=([^&?]*)", "ig"); return ((url.match(re)) ? (url.match(re)[0].substr(name.length + 2)) : '') } }; var SearchUrlUtility = { GetValue: function (obj) { var result = ''; switch (obj.tagName.toLowerCase()) { case 'input': result = ((obj.value && obj.value != '') ? UrlUtility.EncordKey(obj.value) : ''); break; case 'select': if (GetAttr(obj, 'paratype') == '1') { result = obj.options[obj.selectedIndex].value } else { if (obj.selectedIndex > 0) { result = obj.options[obj.selectedIndex].value } } break; default: if (obj.getAttribute("value")) { result = obj.getAttribute("value") } break } return result }, SetValue: function (obj, value) { switch (obj.tagName.toLowerCase()) { case 'input': obj.value = UrlUtility.DecordKey(value); break; case 'select': obj.options[0].selected = true; for (var i = 0; i < obj.options.length; i++) { if (obj.options[i].value == value) { obj.options[i].selected = true; break } } break; default: obj.setAttribute('value', value); break } }, GetUrlPara: function (url, obj) { var names = document.getElementsByName("filter"); var i, para; for (i = 0; i < names.length; i++) { para = SearchUrlUtility.GetValue(names[i]); if (url == undefined) { url = para } else { if (GetAttr(names[i], 'paratype') == '1') { if (obj) { continue } var re = new RegExp("(http.*?://[^/]+)", "ig"); var temp = '', temp1 = ''; if (re.test(url)) { temp = RegExp.$1 } re = new RegExp("([\?|$].*)", "ig"); if (re.test(url)) { temp1 = RegExp.$1 } url = temp + para + temp1 } else { if (para == '') { if (GetAttr(names[i], 'para')) { url = UrlUtility.DelPara(url, GetAttr(names[i], 'para')) } continue } if (GetAttr(names[i], 'para') != null) { url = UrlUtility.AddPara(url, GetAttr(names[i], 'para'), para) } } } } if (obj) { if (url == undefined) { url = para } else { var re = new RegExp("(http.*?://[^/]+)", "ig"); var temp = '', temp1 = ''; if (re.test(url)) { temp = RegExp.$1 } re = new RegExp("([\?|$].*)", "ig"); if (re.test(url)) { temp1 = RegExp.$1 } para = SearchUrlUtility.GetValue(obj); url = temp + para + temp1 } } return url }, SearchStatic: function (key, url) { try { SearchStaticKeyDIV(key, url) } catch (e) { } }, SearchKeyClick: function (keyID, obj, searchtype) { var url = window.top.location.href; var key = ''; var searchtypeurl = ''; if ((searchtype && searchtype != '')) { searchtypeurl = '&searchtype=' + searchtype } if (keyID && getel(keyID.toString())) { if (obj && GetAttr(obj, 'paratype') == '1') { url = SearchUrlUtility.GetUrlPara(url, obj) } else { url = SearchUrlUtility.GetUrlPara(url) } key = getel(keyID.toString()).value.replace(/([^\u0391-\uFFE5a-zA-Z0-9 ])/ig, '') } else { key = getel('keyword').value.replace(/([^\u0391-\uFFE5a-zA-Z0-9 ])/ig, ''); var vk = UrlUtility.EncordKey(key); if (key == '' || key == '请输入类别名称或关键字') { window.location.href = window.location.pathname; return } if (window.location.host.toString().indexOf("www.58.com") >= 0) { window.location.href = "http://www.58.com/?path=" + encodeURI(escape("sou/?jump=1&key=" + vk)) + searchtypeurl } else { window.location.href = "/sou/?jump=1&key=" + vk + searchtypeurl } SearchUrlUtility.SearchStatic(key, 'http://' + window.location.host + '/sou/?jump=1&key=' + vk) + searchtypeurl; return } url = url.replace(/\/pn\d+/, ''); if (key == '' || key == '请输入类别名称或关键字' || key == '在结果中筛选') { url = UrlUtility.DelPara(url, 'key'); url = UrlUtility.DelPara(url, 'final'); url = UrlUtility.DelPara(url, 'jump'); if ((searchtype && searchtype != '')) { url = UrlUtility.AddPara(url, 'searchtype', searchtype) } window.top.location.href = url } else { url = UrlUtility.DelPara(url, 'jump'); url = UrlUtility.AddKeyPara(url, key); url = UrlUtility.AddPara(url, 'final', '1'); if ((searchtype && searchtype != '')) { url = UrlUtility.AddPara(url, 'searchtype', searchtype) } window.top.location.href = url } } }; function AJAXRequest() { var xmlObj = false; var CBfunc, ObjSelf = this; try { xmlObj = new XMLHttpRequest } catch (e) { try { xmlObj = new ActiveXObject("MSXML2.XMLHTTP") } catch (e2) { try { xmlObj = new ActiveXObject("Microsoft.XMLHTTP") } catch (e3) { xmlObj = false } } } if (!xmlObj) return false; if (arguments[0]) this.url = arguments[0]; else this.url = ""; if (arguments[1]) this.callback = arguments[1]; else { this.callback = function (obj) { return } } if (arguments[2]) this.content = arguments[2]; else this.content = ""; if (arguments[3]) this.method = arguments[3]; else this.method = "POST"; if (arguments[4]) this.async = arguments[4]; else this.async = true; this.send = function () { var purl, pcbf, pc, pm, pa; if (arguments[0]) purl = arguments[0]; else purl = this.url; if (arguments[1]) pc = arguments[1]; else pc = this.content; if (arguments[2]) pcbf = arguments[2]; else pcbf = this.callback; if (arguments[3]) pm = arguments[3]; else pm = this.method; if (arguments[4]) pa = arguments[4]; else pa = this.async; if (!pm || !purl || !pa) return false; xmlObj.open(pm, purl, pa); if (pm == "POST") { xmlObj.setRequestHeader("Content-Type", "application/x-www-form-urlencoded") } xmlObj.onreadystatechange = function () { if (xmlObj.readyState == 4) { if (xmlObj.status == 200) pcbf(xmlObj); else pcbf(null) } }; if (pm == "POST") xmlObj.send(pc); else xmlObj.send("") }; this.get = function () { var purl, pcbf; if (arguments[0]) purl = arguments[0]; else purl = this.url; if (arguments[1]) pcbf = arguments[1]; else pcbf = this.callback; if (!purl && !pcbf) return false; this.send(purl, "", pcbf, "GET", true) }; this.post = function () { var fo, pcbf, purl, pc, pm; if (arguments[0]) fo = arguments[0]; else return false; if (arguments[1]) pcbf = arguments[1]; else pcbf = this.callback; if (arguments[2]) purl = arguments[2]; else if (fo.action) purl = fo.action; else purl = this.url; if (arguments[3]) pm = arguments[3]; else if (fo.method) pm = fo.method.toLowerCase(); else pm = "post"; if (!pcbf && !purl) return false; pc = this.formToStr(fo); if (!pc) return false; if (pm) { if (pm == "post") this.send(purl, pc, pcbf, "POST", true); else if (purl.indexOf("?") > 0) this.send(purl + "&" + pc, "", pcbf, "GET", true); else this.send(purl + "?" + pc, "", pcbf, "GET", true) } else this.send(purl, pc, pcbf, "POST", true) }; this.formToStr = function (fc) { var i, query_string = "", and = ""; for (i = 0; i < fc.length; i++) { e = fc[i]; if (e.name != '') { if (e.type == 'select-one') { element_value = e.options[e.selectedIndex].value } else if (e.type == 'checkbox' || e.type == 'radio') { if (e.checked == false) { continue } element_value = e.value } else { element_value = e.value } element_value = encodeURIComponent(element_value); query_string += and + e.name + '=' + element_value; and = "&" } } return query_string } } function GetToolTipInfoDataDIV(tooltipWindowID, inputbox, tooltipType, cityid, inputvalue, selid, showInstruction, buttonID, showhot) { var showh = false; if (showhot) { showh = true } var url = "http://js.my.58.com/SearchServlet.do?inputbox=" + encodeURIComponent(inputvalue) + "&tooltipType=" + tooltipType + "&cityid=" + cityid + "&showhot=" + showh + "&showInstruction=" + showInstruction; var callback = "callback" + Math.random().toString().substring(2, 6); window[callback] = function (data) { SetToolTipData(data, tooltipWindowID, inputbox, tooltipType, selid, showInstruction, buttonID, showh); window[callback] = null }; url += "&callback=" + callback; var script = document.createElement("SCRIPT"); script.src = url; document.body.appendChild(script) } function SearchStaticKeyDIV(key, url) { var script = document.createElement("SCRIPT"); script.src = "http://js.my.58.com/countservlet.doPost?key=" + encodeURIComponent(key) + "&url=" + encodeURIComponent(url); document.body.appendChild(script) } (function (window, undefined) { var doc = window.document; (function (window, undefined) { var doc = window.document; window.undefined = window.undefined; window.fe = function (selector, context) { }; fe.apply = function (o, c, defaults) { if (defaults) fe.apply(o, defaults); if (o && c && typeof c == 'object') { for (var p in c) { o[p] = c[p] } } return o }; (function () { var idSeed = 0, ua = navigator.userAgent.toLowerCase(), check = function (r) { return r.test(ua) }, isStrict = document.compatMode == "CSS1Compat", isOpera = check(/opera/), isChrome = check(/chrome/), isWebKit = check(/webkit/), isSafari = !isChrome && check(/safari/), isSafari3 = isSafari && check(/version\/3/), isSafari4 = isSafari && check(/version\/4/), isIE = !isOpera && check(/msie/), isIE7 = isIE && check(/msie 7/), isIE8 = isIE && check(/msie 8/), isGecko = !isWebKit && check(/gecko/), isGecko3 = isGecko && check(/rv:1\.9/), isBorderBox = isIE && !isStrict, isWindows = check(/windows|win32/), isMac = check(/macintosh|mac os x/), isAir = check(/adobeair/), isLinux = check(/linux/), isSecure = /^https/i.test(window.location.protocol); if (isIE && !(isIE7 || isIE8)) { try { document.execCommand("BackgroundImageCache", false, true) } catch (e) { } } var feid = 1; fe.apply(fe, { isStrict: isStrict, isSecure: isSecure, isOpera: isOpera, isWebKit: isWebKit, isChrome: isChrome, isSafari: isSafari, isSafari3: isSafari3, isSafari4: isSafari4, isSafari2: isSafari && !isSafari3, isIE: isIE, isIE6: isIE && !isIE7 && !isIE8, isIE7: isIE7, isIE8: isIE8, isGecko: isGecko, isGecko2: isGecko && !isGecko3, isGecko3: isGecko3, isBorderBox: isBorderBox, isLinux: isLinux, isWindows: isWindows, isMac: isMac, isAir: isAir, enableGarbageCollector: true, enableListenerCollection: false, USE_NATIVE_JSON: false, TRUE: true, FALSE: false, emptyFn: null, isEmpty: function (v, allowBlank) { return v === null || v === undefined || ((fe.isArray(v) && !v.length)) || (!allowBlank ? v === '' : false) }, isArray: function (v) { return Object.prototype.toString.apply(v) === '[object Array]' }, isObject: function (v) { return v && typeof v == "object" }, isPrimitive: function (v) { var t = typeof v; return t == 'string' || t == 'number' || t == 'boolean' }, isFunction: function (v) { return typeof v == "function" }, isDefined: function (v) { return typeof v !== 'undefined' }, isDate: function (v) { return toString.apply(v) === '[object Date]' }, isObject: function (v) { return !!v && Object.prototype.toString.call(v) === '[object Object]' }, isPrimitive: function (v) { return fe.isString(v) || fe.isNumber(v) || fe.isBoolean(v) }, isFunction: function (v) { return toString.apply(v) === '[object Function]' }, isNumber: function (v) { return typeof v === 'number' && isFinite(v) }, isString: function (v) { return typeof v === 'string' }, isBoolean: function (v) { return typeof v === 'boolean' }, isElement: function (v) { return v ? !!v.tagName : false }, id: function () { return feid++ }, newGuid: function () { var guid = ""; for (var i = 1; i <= 32; i++) { var n = Math.floor(Math.random() * 16.0).toString(16); guid += n; if ((i == 8) || (i == 12) || (i == 16) || (i == 20)) guid += "-" } return guid }, applyIf: function (o, c) { if (o) { for (var p in c) { if (fe.isEmpty(o[p])) { o[p] = c[p] } } } return o }, extend: function () { var io = function (o) { for (var m in o) { this[m] = o[m] } }; var oc = Object.prototype.constructor; return function (sb, sp, overrides) { if (fe.isObject(sp)) { overrides = sp; sp = sb; sb = overrides.constructor != oc ? overrides.constructor : function () { sp.apply(this, arguments) } } var F = function () { }, sbp, spp = sp.prototype; F.prototype = spp; sbp = sb.prototype = new F(); sbp.constructor = sb; sb.superclass = spp; if (spp.constructor == oc) { spp.constructor = sp } sb.override = function (o) { fe.override(sb, o) }; sbp.superclass = sbp.supr = (function () { return spp }); sbp.override = io; fe.override(sb, overrides); sb.extend = function (o) { fe.extend(sb, o) }; return sb } } (), override: function (origclass, overrides) { if (overrides) { var p = origclass.prototype; fe.apply(p, overrides); if (fe.isIE && overrides.toString != origclass.toString) { p.toString = overrides.toString } } }, namespace: function () { var o, d; fe.each(arguments, function (v) { d = v.split("."); o = window[d[0]] = window[d[0]] || {}; fe.each(d.slice(1), function (v2) { o = o[v2] = o[v2] || {} }) }); return o }, urlEncode: function (o, pre) { var buf = [], key, e = encodeURIComponent; for (key in o) { fe.each(o[key] || key, function (val, i) { buf.push("&", e(key), "=", val != key ? e(val) : "") }) } if (!pre) { buf.shift(); pre = "" } return pre + buf.join('') }, urlDecode: function (string, overwrite) { var obj = {}, pairs = string.split('&'), d = decodeURIComponent, name, value; fe.each(pairs, function (pair) { pair = pair.split('='); name = d(pair[0]); value = d(pair[1]); obj[name] = overwrite || !obj[name] ? value : [].concat(obj[name]).concat(value) }); return obj }, isReady: false, readyList: [], DOMContentLoaded: null, readyBound: false, readyWait: 1, ready: function (wait) { if (wait === true) { this.readyWait-- } if (!this.readyWait || (wait !== true && !this.isReady)) { if (!document.body) { return setTimeout(this.ready, 1) } this.isReady = true; if (wait !== true && --this.readyWait > 0) { return } if (this.readyList) { var fn, i = 0, ready = this.readyList; this.readyList = null; while ((fn = ready[i++])) { fn.call(document, fe) } } } }, bindReady: function () { if (this.readyBound) { return } this.readyBound = true; if (document.readyState === "complete") { return setTimeout(this.ready, 1) } if (document.addEventListener) { document.addEventListener("DOMContentLoaded", this.DOMContentLoaded, false); window.addEventListener("load", this.ready, false) } else if (document.attachEvent) { document.attachEvent("onreadystatechange", this.DOMContentLoaded); window.attachEvent("onload", this.ready); var toplevel = false; try { toplevel = window.frameElement == null } catch (e) { } if (document.documentElement.doScroll && toplevel) { doScrollCheck() } } }, init: function (fn) { this.bindReady(); if (this.isReady) { fn.call(document, fe) } else if (this.readyList) { this.readyList.push(fn) } return }, domload: (function () { var load_events = [], load_timer, script, done, exec, old_onload, init = function () { done = true; clearInterval(load_timer); while (exec = load_events.shift()) exec(); if (script) script.onreadystatechange = '' }; return function (func) { if (done) return func(); if (!load_events[0]) { if (document.addEventListener) document.addEventListener("DOMContentLoaded", init, false); if (/WebKit/i.test(navigator.userAgent)) { load_timer = setInterval(function () { if (/loaded|complete/.test(document.readyState)) init() }, 10) } old_onload = window.onload; window.onload = function () { init(); if (old_onload) old_onload() } } load_events.push(func) } })(), isTopReady: false, topReadyList: [], topReady: function (fn) { if (fe.isTopReady) { fn.call(document, fe) } else if (fe.topReadyList) { fe.topReadyList.push(fn) } return this }, OnTopReady: function () { fe.isTopReady = true; if (fe.topReadyList) { var fn, i = 0; while ((fn = fe.topReadyList[i++])) { fn.call(document, fe) } fe.topReadyList = null } }, toArray: function () { return fe.isIE ? function (a, i, j, res) { res = []; fe.each(a, function (v) { res.push(v) }); return res.slice(i || 0, j || res.length) } : function (a, i, j) { return Array.prototype.slice.call(a, i || 0, j || a.length) } } (), each: function (array, fn, scope) { if (fe.isEmpty(array, true)) return; if (typeof array.length == "undefined" || typeof array == "string") { array = [array] } for (var i = 0, len = array.length; i < len; i++) { if (fn.call(scope || array[i], array[i], i, array) === false) { return i } } } }) })(); if (document.addEventListener) { fe.DOMContentLoaded = function () { document.removeEventListener("DOMContentLoaded", fe.DOMContentLoaded, false); fe.ready() } } else if (document.attachEvent) { fe.DOMContentLoaded = function () { if (document.readyState === "complete") { document.detachEvent("onreadystatechange", fe.DOMContentLoaded); fe.ready() } } } function doScrollCheck() { if (fe.isReady) { return } try { document.documentElement.doScroll("left") } catch (e) { setTimeout(doScrollCheck, 1); return } fe.ready() } fe.domload(function () { }); fe.init(function () { if (!fe.isTopReady) fe.OnTopReady() }); fe.topReady(function () { }); fe.__Event = function (obj, name) { this.name = name; this.obj = obj; this.listeners = [] }; fe.__Event.prototype = { addListener: function (fn, scope, options) { var me = this, l; scope = scope || me.obj; if (!me.isListening(fn, scope)) { l = me.createListener(fn, scope, options); if (me.firing) { me.listeners = me.listeners.slice(0) } me.listeners.push(l) } }, createListener: function (fn, scope, o) { o = o || {}; scope = scope || this.obj; var l = { fn: fn, scope: scope, options: o }, h = fn; if (o.target) { h = createTargeted(h, o, scope) } if (o.delay) { h = createDelayed(h, o, l, scope) } if (o.single) { h = createSingle(h, this, fn, scope) } if (o.buffer) { h = createBuffered(h, o, l, scope) } l.fireFn = h; return l }, findListener: function (fn, scope) { var list = this.listeners, i = list.length, l; scope = scope || this.obj; while (i--) { l = list[i]; if (l) { if (l.fn == fn && l.scope == scope) { return i } } } return -1 }, isListening: function (fn, scope) { return this.findListener(fn, scope) != -1 }, removeListener: function (fn, scope) { var index, l, k, me = this, ret = false; if ((index = me.findListener(fn, scope)) != -1) { if (me.firing) { me.listeners = me.listeners.slice(0) } l = me.listeners[index]; if (l.task) { l.task.cancel(); delete l.task } k = l.tasks && l.tasks.length; if (k) { while (k--) { l.tasks[k].cancel() } delete l.tasks } me.listeners.splice(index, 1); ret = true } return ret }, clearListeners: function () { var me = this, l = me.listeners, i = l.length; while (i--) { me.removeListener(l[i].fn, l[i].scope) } }, fire: function () { var me = this, listeners = me.listeners, len = listeners.length, i = 0, l; if (len > 0) { me.firing = true; var args = Array.prototype.slice.call(arguments, 0); for (; i < len; i++) { l = listeners[i]; if (l && l.fireFn.apply(l.scope || me.obj || window, args) === false) { return (me.firing = false) } } } me.firing = false; return true } }; fe.observable = function () { var me = this, e = me.events; if (me.listeners) { me.on(me.listeners); delete me.listeners } me.events = e || {} }; fe.observable.prototype = { filterOptRe: /^(?:scope|delay|buffer|single)$/, fireEvent: function () { var a = Array.prototype.slice.call(arguments, 0), ename = a[0].toLowerCase(), me = this, ret = true, ce = me.events[ename], cc, q, c; if (me.eventsSuspended === true) { if (q = me.eventQueue) { q.push(a) } } else if (typeof ce == 'object') { if (ce.bubble) { if (ce.fire.apply(ce, a.slice(1)) === false) { return false } c = me.getBubbleTarget && me.getBubbleTarget(); if (c && c.enableBubble) { cc = c.events[ename]; if (!cc || typeof cc != 'object' || !cc.bubble) { c.enableBubble(ename) } return c.fireEvent.apply(c, a) } } else { a.shift(); ret = ce.fire.apply(ce, a) } } return ret }, addListener: function (eventName, fn, scope, o) { var me = this, e, oe, ce; if (typeof eventName == 'object') { o = eventName; for (e in o) { oe = o[e]; if (!me.filterOptRe.test(e)) { me.addListener(e, oe.fn || oe, oe.scope || o.scope, oe.fn ? oe : o) } } } else { eventName = eventName.toLowerCase(); ce = me.events[eventName] || true; if (typeof ce == 'boolean') { me.events[eventName] = ce = new fe.__Event(me, eventName) } ce.addListener(fn, scope, typeof o == 'object' ? o : {}) } }, removeListener: function (eventName, fn, scope) { var ce = this.events[eventName.toLowerCase()]; if (typeof ce == 'object') { if (fn && typeof fn == 'function') { ce.removeListener(fn, scope) } else { ce.clearListeners() } } }, purgeListeners: function () { var events = this.events, evt, key; for (key in events) { evt = events[key]; if (typeof evt == 'object') { evt.clearListeners() } } }, addEvents: function (o) { var me = this; me.events = me.events || {}; if (typeof o == 'string') { var a = arguments, i = a.length; while (i--) { me.events[a[i]] = me.events[a[i]] || true } } else { fe.applyIf(me.events, o) } }, hasListener: function (eventName) { var e = this.events[eventName.toLowerCase()]; return typeof e == 'object' && e.listeners.length > 0 }, suspendEvents: function (queueSuspended) { this.eventsSuspended = true; if (queueSuspended && !this.eventQueue) { this.eventQueue = [] } }, resumeEvents: function () { var me = this, queued = me.eventQueue || []; me.eventsSuspended = false; delete me.eventQueue; fe.each(queued, function (e) { me.fireEvent.apply(me, e) }) } }; fe.observable.prototype.on = fe.observable.prototype.addListener; fe.observable.prototype.un = fe.observable.prototype.removeListener; fe.timeline = (function () { var tl = new fe.observable(); var __events = ["base_ready", "ad_ready", "business_ready", "extension_ready", "general_ready", "init_ready", "log_ready", "system_ready", "util_ready", "widgets_ready", "now", "top_ready", "dom_ready", "doc_ready", "lazyload", "preloaded"]; var __status = {}; tl.addEvents(__events); for (var i = 0, len = __events.length; i < len; i++) { __status[__events[i]] == __status[__events[i]] || false; (function (en) { tl.on(en, function () { __status[en] = true }) })(__events[i]) } var timeline = { trigger: function (en) { tl.fireEvent(en) }, at: function (en, handler) { if (__events.indexOf(en.toLowerCase()) >= 0 && handler) { if (__status[en.toLowerCase()] == true) handler(); else { var agent = function () { handler(); tl.un(en, agent) }; tl.on(en, agent) } } } }; return timeline })(); fe.timeline.trigger("base_ready") })(window); (function (window, undefined) { var doc = window.document; fe.applyIf(Array.prototype, { indexOf: function (o) { for (var i = 0, len = this.length; i < len; i++) { if (this[i] == o) return i } return -1 }, remove: function (o) { var index = this.indexOf(o); if (index != -1) { this.splice(index, 1) } return this } }); fe.applyIf(Number.prototype, { between: function (min, max) { return Math.min(Math.max(this, min), max) }, NaN0: function () { return isNaN(this) ? 0 : this } }); fe.applyIf(String, { format: function (format) { var args = fe.toArray(arguments, 1); return format.replace(/\{(\d+)\}/g, function (m, i) { return args[i] }) }, formatex: function (source, opts) { source = String(source); var data = Array.prototype.slice.call(arguments, 1), toString = Object.prototype.toString; if (data.length) { data = data.length == 1 ? (opts !== null && (/\[object Array\]|\[object Object\]/.test(toString.call(opts))) ? opts : data) : data; return source.replace(/#\{(.+?)\}/g, function (match, key) { var replacer = data[key]; if ('[object Function]' == toString.call(replacer)) { replacer = replacer(key) } return ('undefined' == typeof replacer ? '' : replacer) }) } return source }, escape: function (string) { return string.replace(/('|\\)/g, "\\$1") }, leftPad: function (val, size, ch) { var result = String(val); if (!ch) { ch = " " } while (result.length < size) { result = ch + result } return result } }); fe.applyIf(String.prototype, { toggle: function (value, other) { return this == value ? other : value }, trim: function () { var re = /^\s+|\s+$/g; return this.replace(re, "") } }); fe.timeline.trigger("extension_ready") })(window); (function (window, undefined) { var doc = window.document; fe.namespace("fe.util"); fe.ajax = fe.util.ajax = function () { var activeX = ['MSXML2.XMLHTTP.3.0', 'MSXML2.XMLHTTP', 'Microsoft.XMLHTTP']; function setHeader(o) { var conn = o.conn, prop; function setTheHeaders(conn, headers) { for (prop in headers) { if (headers.hasOwnProperty(prop)) { conn.setRequestHeader(prop, headers[prop]) } } } if (pub.defaultHeaders) { setTheHeaders(conn, pub.defaultHeaders) } if (pub.headers) { setTheHeaders(conn, pub.headers); pub.headers = null } } function createExceptionObject(tId, callbackArg, isAbort, isTimeout) { return { tId: tId, status: isAbort ? -1 : 0, statusText: isAbort ? 'transaction aborted' : 'communication failure', isAbort: true, isTimeout: true, argument: callbackArg} } function initHeader(label, value) { (pub.headers = pub.headers || {})[label] = value } function createResponseObject(o, callbackArg) { var headerObj = {}, headerStr, conn = o.conn; try { headerStr = o.conn.getAllResponseHeaders(); fe.each(headerStr.split('\n'), function (v) { var t = v.split(':'); headerObj[t[0]] = t[1] }) } catch (e) { } return { tId: o.tId, status: conn.status, statusText: conn.statusText, getResponseHeader: headerObj, getAllResponseHeaders: headerStr, responseText: conn.responseText, responseXML: conn.responseXML, argument: callbackArg} } function releaseObject(o) { o.conn = null; o = null } function handleTransactionResponse(o, callback, isAbort, isTimeout) { if (!callback) { releaseObject(o); return } var httpStatus, responseObject; try { if (o.conn.status !== undefined && o.conn.status != 0) { httpStatus = o.conn.status } else { httpStatus = 13030 } } catch (e) { httpStatus = 13030 } if ((httpStatus >= 200 && httpStatus < 300) || (fe.isIE && httpStatus == 1223)) { responseObject = createResponseObject(o, callback.argument); if (callback.success) { if (!callback.scope) { callback.success(responseObject) } else { callback.success.apply(callback.scope, [responseObject]) } } } else { switch (httpStatus) { case 12002: case 12029: case 12030: case 12031: case 12152: case 13030: responseObject = createExceptionObject(o.tId, callback.argument, (isAbort ? isAbort : false), isTimeout); if (callback.failure) { if (!callback.scope) { callback.failure(responseObject) } else { callback.failure.apply(callback.scope, [responseObject]) } } break; default: responseObject = createResponseObject(o, callback.argument); if (callback.failure) { if (!callback.scope) { callback.failure(responseObject) } else { callback.failure.apply(callback.scope, [responseObject]) } } } } releaseObject(o); responseObject = null } function handleReadyState(o, callback) { callback = callback || {}; var conn = o.conn, tId = o.tId, poll = pub.poll, cbTimeout = callback.timeout || null; if (cbTimeout) { pub.timeout[tId] = setTimeout(function () { pub.abort(o, callback, true) }, cbTimeout) } poll[tId] = setInterval(function () { if (conn && conn.readyState == 4) { clearInterval(poll[tId]); poll[tId] = null; if (cbTimeout) { clearTimeout(pub.timeout[tId]); pub.timeout[tId] = null } handleTransactionResponse(o, callback) } }, pub.pollInterval) } function asyncRequest(method, uri, callback, postData) { var o = getConnectionObject() || null; if (o) { o.conn.open(method, uri, true); if (pub.useDefaultXhrHeader) { initHeader('X-Requested-With', pub.defaultXhrHeader) } if (postData && pub.useDefaultHeader && (!pub.headers || !pub.headers['Content-Type'])) { initHeader('Content-Type', pub.defaultPostHeader) } if (pub.defaultHeaders || pub.headers) { setHeader(o) } handleReadyState(o, callback); o.conn.send(postData || null) } return o } function getConnectionObject() { var o; try { if (o = createXhrObject(pub.transactionId)) { pub.transactionId++ } } catch (e) { } finally { return o } } function createXhrObject(transactionId) { var http; try { http = new XMLHttpRequest() } catch (e) { for (var i = 0; i < activeX.length; ++i) { try { http = new ActiveXObject(activeX[i]); break } catch (e) { } } } finally { return { conn: http, tId: transactionId} } } var pub = { request: function (method, uri, cb, data, options) { if (options) { var me = this, xmlData = options.xmlData, jsonData = options.jsonData; fe.applyIf(me, options); if (xmlData || jsonData) { initHeader('Content-Type', xmlData ? 'text/xml' : 'application/json'); data = xmlData || fe.json.encode(jsonData) } } return asyncRequest(method || options.method || "POST", uri, cb, data) }, useDefaultHeader: true, defaultPostHeader: 'application/x-www-form-urlencoded; charset=UTF-8', useDefaultXhrHeader: true, defaultXhrHeader: 'XMLHttpRequest', poll: {}, timeout: {}, pollInterval: 50, transactionId: 0, abort: function (o, callback, isTimeout) { var me = this, tId = o.tId, isAbort = false; if (me.isCallInProgress(o)) { o.conn.abort(); clearInterval(me.poll[tId]); me.poll[tId] = null; if (isTimeout) { me.timeout[tId] = null } handleTransactionResponse(o, callback, (isAbort = true), isTimeout) } return isAbort }, isCallInProgress: function (o) { return o.conn && !{ 0: true, 4: true}[o.conn.readyState] } }; return pub } (); fe.apply(fe.ajax, { jsonp: function (url, params, callback, cache) { url = url || ""; params = params || {}; var callbackAction; if (fe.isEmpty(params.callback)) { callbackAction = "fejsonp_" + fe.id() } else { callbackAction = params.callback } window[callbackAction] = function () { callback(arguments[0]); if (fe.isEmpty(params.callback)) { window[callbackAction] = null; try { delete window[callbackAction] } catch (e) { } } }; var src = fe.url.add(url, params); src = fe.url.set(src, { callback: callbackAction }); var script = document.createElement('script'); script.setAttribute('src', src); document.getElementsByTagName('head')[0].appendChild(script) } }); fe.namespace("fe.util"); fe.cookie = fe.util.cookie = { get: function (name) { var arg = name + "="; var alen = arg.length; var clen = document.cookie.length; var i = 0; var j = 0; while (i < clen) { j = i + alen; if (document.cookie.substring(i, j) == arg) return __getCookieVal(j); i = document.cookie.indexOf(" ", i) + 1; if (i == 0) break } return null }, set: function (name, value, expires, path, domain, secure) { var argv = arguments; var argc = arguments.length; var now = new Date(); var expires = (argc > 2) ? argv[2] : new Date(now.getFullYear(), now.getMonth() + 1, now.getUTCDate()); var path = (argc > 3) ? argv[3] : '/'; var domain = (argc > 4) ? argv[4] : '.58.com'; var secure = (argc > 5) ? argv[5] : false; document.cookie = name + "=" + escape(value) + ((expires == null) ? "" : ("; expires=" + expires.toGMTString())) + ((path == null) ? "" : ("; path=" + path)) + ((domain == null) ? "" : ("; domain=" + domain)) + ((secure == true) ? "; secure" : "") }, remove: function (name) { if (this.get(name)) this.set(name, "", new Date(1970, 1, 1)) } }; function __getCookieVal(offset) { var endstr = document.cookie.indexOf(";", offset); if (endstr == -1) { endstr = document.cookie.length } return unescape(document.cookie.substring(offset, endstr)) } fe.namespace("fe.util"); fe.dom = fe.util.dom = { _NAME_ATTRS: (function () { var result = { 'cellpadding': 'cellPadding', 'cellspacing': 'cellSpacing', 'colspan': 'colSpan', 'rowspan': 'rowSpan', 'valign': 'vAlign', 'usemap': 'useMap', 'frameborder': 'frameBorder' }; if (fe.isIE && !(fe.isIE8)) { result['for'] = 'htmlFor'; result['class'] = 'className' } else { result['htmlFor'] = 'for'; result['className'] = 'class' } return result })(), create: function (tagName, options) { options = options || {}; var el = document.createElement(tagName); return this.setAttr(el, options) }, copy: function (id) { var el = this.get(id); if (fe.isElement(el)) return el.cloneNode(arguments[1] === true); return null }, remove: function (id) { var el = this.get(id); if (el.parentNode) { el.parentNode.removeChild(el) } }, show: function (id) { var el = this.get(id); if (fe.isElement(el)) { el.style.display = "block" } }, hide: function (id) { var el = this.get(id); if (fe.isElement(el)) { el.style.display = "none" } }, get: function (id) { if ('string' == typeof id || id instanceof String) { return document.getElementById(id) } else if (id && id.nodeName && (id.nodeType == 1 || id.nodeType == 9)) { return id } return null }, setAttr: function (element, key, value) { if (arguments.length == 3) { element = this.get(element); if ('style' == key) { element.style.cssText = value } else { key = this._NAME_ATTRS[key] || key; element.setAttribute(key, value) } return element } else if (arguments.length == 2) { element = this.get(element); var attributes = arguments[1]; for (var key in attributes) { this.setAttr(element, key, attributes[key]) } return element } } }; fe.namespace("fe.util"); fe.url = fe.util.url = { encode: function (value) { return (fe.isEmpty(value) ? "" : encodeURI(escape(value))) }, decode: function (value) { if (fe.isEmpty(v)) return ""; if (v.indexOf("%25u") != -1) return unescape(unescape(v)); else if (v.indexOf("%25e") != -1) return decodeURI(unescape(v)); else return decodeURI(v) }, add: function () { if (arguments.length == 0) return ""; if (arguments.length == 1) return arguments[0]; if (arguments.length == 2) { if (fe.isObject(arguments[1])) { var url = arguments[0]; var arr = url.split("?"); var params = arr.length == 2 ? this._formatting(arr[1]) : {}; var p = arguments[1]; for (var key in p) { if (fe.isEmpty(params[key])) { params[key] = (p[key] == null || p[key] == undefined ? "" : p[key]) } else { params[key] += "," + (p[key] == null || p[key] == undefined ? "" : p[key]) } } return arr[0] + this._formatting(params) } else if (fe.isString(arguments[1])) { return this.add(arguments[0], arguments[1], "") } else { return this.add(arguments[0], arguments[1].toString(), "") } } if (arguments.length == 3) { var url = arguments[0]; var arr = url.split("?"); var params = arr.length == 2 ? this._formatting(arr[1]) : {}; var name = arguments[1]; var value = arguments[2]; if (fe.isEmpty(params[name])) { params[name] = value } else { params[name] += "," + value } return arr[0] + this._formatting(params) } }, set: function () { if (arguments.length == 0) return ""; if (arguments.length == 1) return arguments[0]; if (arguments.length == 2) { if (fe.isObject(arguments[1])) { var url = arguments[0]; var arr = url.split("?"); var params = arr.length == 2 ? this._formatting(arr[1]) : {}; var p = arguments[1]; for (var key in p) { if (p[key] == null || p[key] == undefined) delete params[key]; else params[key] = p[key] } return arr[0] + this._formatting(params) } else if (fe.isString(arguments[1])) { return this.add(arguments[0], arguments[1], "") } else { return this.add(arguments[0], arguments[1].toString(), "") } } if (arguments.length == 3) { var url = arguments[0]; var arr = url.split("?"); var params = arr.length == 2 ? this._formatting(arr[1]) : {}; params[arguments[1]] = arguments[2]; return arr[0] + this._formatting(params) } }, get: function () { if (!arguments.length) return null; var obj = this._formatting(arguments[0]); if (arguments[1]) return obj && obj[arguments[1]] ? obj[arguments[1]] : null; else return obj }, _formatting: function () { if (fe.isString(arguments[0])) { var str = arguments[0]; var obj = {}; str = str.substring(str.indexOf("?") + 1); var arr = str.split("&"); for (var i = 0; i < arr.length; i++) { var kv = arr[i].split("="); obj[kv[0]] = kv[1] } return obj } else if (fe.isObject(arguments[0])) { var obj = arguments[0]; var arrstr = []; for (var key in obj) { if (key != undefined && key != null) arrstr.push(key + "=" + obj[key]) } return arrstr.length ? "?" + arrstr.join("&") : "" } else return null } }; fe.timeline.trigger("util_ready") })(window); (function (window, undefined) { var doc = window.document; fe.namespace("fe.bs"); fe.bs.getlocal = { init: function () { fe.ajax.jsonp("http://user.58.com/userdata/getlocal/", null, function (data) { if (data && data.list) { var coo = fe.cookie.get("city"); var cur = data.list; if (fe.isEmpty(cur)) return; if (coo != cur) { var html = '&nbsp;&nbsp;<a target="_self" id="link_city_change" href="http://' + cur + '.58.com/" onclick="tolocal(\'' + cur + '\')">(' + data.local + ')</a>'; var ce = fe.dom.get("cityName"); if (fe.isElement(ce)) { ce.innerHTML += html } } } }) } }; window.tolocal = function (v) { var exp = new Date(); fe.cookie.set("58home", v); fe.cookie.set(v, [exp.getFullYear(), exp.getMonth() + 1, exp.getDate(), exp.getHours(), exp.getMinutes(), exp.getSeconds()].join("")) }; fe.init(function () { fe.bs.getlocal.init() }); fe.timeline.trigger("business_ready") })(window); fe.timeline.trigger("now") })(window) }